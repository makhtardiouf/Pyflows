#include "RRC36331-EUTRA-InterNodeDefinitions.asn1_typedefs.h"
// 
// --
// -- ASN.1 module found by ./crfc2asn1.pl in EUTRA-RRC36331.txt at line 19467
// --
// 
// EUTRA-InterNodeDefinitions DEFINITIONS AUTOMATIC TAGS ::=
// 
// BEGIN
// 
// IMPORTS
// AntennaInfoCommon,
// AntennaInfoDedicated-v10i0,
// ARFCN-ValueEUTRA,
// ARFCN-ValueEUTRA-v9e0,
// ARFCN-ValueEUTRA-r9,
// CellIdentity,
// C-RNTI,
// DL-DCCH-Message,
// DRB-Identity,
// DRB-ToReleaseList,
// FreqBandIndicator-r11,
// InDeviceCoexIndication-r11,
// MasterInformationBlock,
// maxBands,
// maxFreq,
// maxDRB,
// maxSCell-r10,
// maxSCell-r13,
// maxSCell-Plus1,
// maxServCell-r10,
// maxServCell-Plus1,
// maxServCell-r13,
// MBMSInterestIndication-r11,
// MeasConfig,
// MeasGapConfig,
// OtherConfig-r9,
// PhysCellId,
// P-Max,
// PowerCoordinationInfo-r12,
// SidelinkUEInformation-r12,
// SL-CommConfig-r12,
// SL-DiscConfig-r12,
// RadioResourceConfigDedicated,
// RSRP-Range,
// RSRQ-Range,
// RSRQ-Range-v1250,
// RS-SINR-Range-r13,
// SCellToAddModList-r10,
// SCellToAddModListExt-r13,
// SCG-ConfigPartSCG-r12,
// SecurityAlgorithmConfig,
// SCellIndex-r10,
// SCellIndex-r13,
// SCellToReleaseList-r10,
// SCellToReleaseListExt-r13,
// ServCellIndex-r10,
// ServCellIndexFull-r13,
// ShortMAC-I,
// MeasResultSSTD-r13,
// SystemInformationBlockType1,
// SystemInformationBlockType1-v890-IEs,
// SystemInformationBlockType2,
// UEAssistanceInformation-r11,
// UECapabilityInformation,
// UE-CapabilityRAT-ContainerList,
// UE-RadioPagingInfo-r12,
// WLAN-OffloadConfig-r12
// FROM EUTRA-RRC-Definitions;
// 
// -- ASN1STOP
// 
// 10.2.2	Message definitions
// -	HandoverCommand
// This message is used to transfer the handover command generated by the target eNB.
// Direction: target eNB to source eNB/ source RAN
// HandoverCommand message
// -- ASN1START
	 ;
	 struct        HandoverCommand    {
	 enum        criticalExtensions   {
	 enum           c1    {
	HandoverCommandr8IEs      handoverCommandr8;
	spare7 typedef  ;
	spare6 typedef   spare5 typedef   spare4 typedef  ;
	spare3 typedef   spare2 typedef   spare1 typedef;
	} ;
	 struct   }   criticalExtensionsFuture    {
	};
	};
	 ;
	struct      HandoverCommandr8IEs    {
	OCTE    handoverCommandMessage  ;
	 struct   }    nonCriticalExtension   {
	};
	 ;
// -- ASN1STOP
// 
// HandoverCommand field descriptions
// handoverCommandMessage
// Contains the entire DL-DCCH-Message including the RRCConnectionReconfiguration message used to perform handover within E-UTRAN or handover to E-UTRAN, generated (entirely) by the target eNB.
// 
// NOTE:	The source BSC, in case of inter-RAT handover from GERAN to E-UTRAN, expects that the HandoverCommand message includes DL-DCCH-Message only. Thus, criticalExtensionsFuture, spare1-spare7 and nonCriticalExtension should not be used regardless whether the source RAT is E-UTRAN, UTRAN or GERAN.
// -	HandoverPreparationInformation
// This message is used to transfer the E-UTRA RRC information used by the target eNB during handover preparation, including UE capability information.
// Direction: source eNB/ source RAN to target eNB
// HandoverPreparationInformation message
// -- ASN1START
	 ;
	 struct    HandoverPreparationInformation    {
	 enum        criticalExtensions   {
	 enum           c1    {
	HandoverPreparationInformationr8IEs  handoverPreparationInformationr8;
	spare7 typedef  ;
	spare6 typedef   spare5 typedef   spare4 typedef  ;
	spare3 typedef   spare2 typedef   spare1 typedef;
	} ;
	 struct   }   criticalExtensionsFuture    {
	};
	};
	 ;
	HandoverPreparationInformationr8IEs    struct     {
	UECapabilityRATContainerList   ueRadioAccessCapabilityInfo;
	 Cond HO        ASConfig       asConfig;
	RRMConfig       rrmConfig;
	 Cond HO       ASContext       asContext;
	HandoverPreparationInformationv920IEs    nonCriticalExtension;
	};
	 ;
	struct    HandoverPreparationInformationv920IEs  {
	enum        ueConfigReleaser9   {
	rel9  rel10  rel11  rel12  v10j0  v11e0 ;
	 Cond HO2     v1280  spare1  

};
	HandoverPreparationInformationv9d0IEs    nonCriticalExtension;
	};
	 ;
	struct    HandoverPreparationInformationv9d0IEs  {
	  OCTE   lateNonCriticalExtension;
	HandoverPreparationInformationv9e0IEs    nonCriticalExtension;
	};
	 ;
	 Late noncritical extensions:;
	HandoverPreparationInformationv9j0IEs    struct     {
	 Following field is only for pre REL10 late noncritical extensions;
	      OCTET  string    lateNonCriticalExtension;
	HandoverPreparationInformationv10j0IEs    nonCriticalExtension;
	};
	 ;
	HandoverPreparationInformationv10j0IEs    struct     {
	ASConfigv10j0      asConfigv10j0;
	 Following field is only for late noncritical extensions from REL10;
	 struct   }    nonCriticalExtension   {
	};
	 ;
	 Regular noncritical extensions:;
	struct    HandoverPreparationInformationv9e0IEs  {
	 Cond HO2       ASConfigv9e0      asConfigv9e0;
	HandoverPreparationInformationv1130IEs    nonCriticalExtension;
	};
	 ;
	struct    HandoverPreparationInformationv1130IEs  {
	 Cond HO2      ASContextv1130     asContextv1130;
	HandoverPreparationInformationv1250IEs    nonCriticalExtension;
	};
	 ;
	HandoverPreparationInformationv1250IEs    struct     {
	 Cond HO3      ARFCNValueEUTRAr9    ueSupportedEARFCNr12;
	 Cond HO2      ASConfigv1250     asConfigv1250;
	 struct   }    nonCriticalExtension   {
	};
	 ;
// -- ASN1STOP
// 
// HandoverPreparationInformation field descriptions
// as-Config
// The radio resource configuration. Applicable in case of intra-E-UTRA handover. If the target receives an incomplete MeasConfig and RadioResourceConfigDedicated in the as-Config, the target eNB may decide to apply the full configuration option based on the ue-ConfigRelease.
// as-Context
// Local E-UTRAN context required by the target eNB.
// rrm-Config
// Local E-UTRAN context used depending on the target node's implementation, which is mainly used for the RRM purpose.
// ue-ConfigRelease
// Indicates the RRC protocol release or version applicable for the current UE configuration. This could be used by target eNB to decide if the full configuration approach should be used. If this field is not present, the target assumes that the current UE configuration is based on the release 8 version of RRC protocol. NOTE 1.
// ue-RadioAccessCapabilityInfo
// NOTE 2
// ue-SupportedEARFCN
// Includes UE supported EARFCN of the handover target E-UTRA cell if the target E-UTRA cell belongs to multiple frequency bands.
// 
// NOTE 1:	The source typically sets the ue-ConfigRelease to the release corresponding with the current dedicated radio configuration. The source may however also consider the common radio resource configuration e.g. in case interoperability problems would appear if the UE temporary continues extensions of this part of the configuration in a target PCell not supporting them.
// NOTE 2:	The following table indicates per source RAT whether RAT capabilities are included or not.
// Source RAT
// E-UTRA capabilites
// UTRA capabilities
// GERAN capabilities
// UTRAN
// Included
// May be included, ignored by eNB if received
// May be included
// GERAN CS
// Excluded
// May be included, ignored by eNB if received
// Included
// GERAN PS
// Excluded
// May be included, ignored by eNB if received
// Included
// E-UTRAN
// Included
// May be included
// May be included
// 
// Conditional presence
// Explanation
// HO
// The field is mandatory present in case of handover within E-UTRA; otherwise the field is not present.
// HO2
// The field is optional present in case of handover within E-UTRA; otherwise the field is not present.
// HO3
// The field is optional present in case of handover from GERAN to E-UTRA, otherwise the field is not present.
// 
// -	SCG-Config
// This message is used to transfer the SCG radio configuration generated by the SeNB.
// Direction: Secondary eNB to master eNB
// SCG-Config message
// -- ASN1START
	 ;
	struct        SCGConfigr12    {
	 enum        criticalExtensions   {
	 enum           c1    {
	SCGConfigr12IEs      scgConfigr12;
	spare7 typedef  ;
	spare6 typedef   spare5 typedef   spare4 typedef  ;
	spare3 typedef   spare2 typedef   spare1 typedef;
	} ;
	 struct   }   criticalExtensionsFuture    {
	};
	};
	 ;
	struct       SCGConfigr12IEs    {
	SCGConfigPartSCGr12     scgRadioConfigr12;
	 struct   }    nonCriticalExtension   {
	};
	 ;
// -- ASN1STOP
// 
// SCG-Config field descriptions
// scg-RadioConfig-r12
// Includes the change of the dedicated SCG configuration and, upon addition of an SCG cell, the common SCG configuration.
// The SeNB only includes a new SCG cell in response to a request from MeNB, but may include release of an SCG cell release or release of the SCG part of an SCG/Split DRB without prior request from MeNB. The SeNB does not use this field to initiate release of the SCG.
// 
// -	SCG-ConfigInfo
// This message is used by MeNB to request the SeNB to perform certain actions e.g. to establish, modify or release an SCG, and it may include additional information e.g. to assist the SeNB with assigning the SCG configuration.
// Direction: Master eNB to secondary eNB
// SCG-ConfigInfo message
// -- ASN1START
	 ;
	struct        SCGConfigInfor12    {
	 enum        criticalExtensions   {
	 enum           c1    {
	SCGConfigInfor12IEs      scgConfigInfor12;
	spare7 typedef  ;
	spare6 typedef   spare5 typedef   spare4 typedef  ;
	spare3 typedef   spare2 typedef   spare1 typedef;
	} ;
	 struct   }   criticalExtensionsFuture    {
	};
	};
	 ;
	struct      SCGConfigInfor12IEs    {
	RadioResourceConfigDedicated radioResourceConfigDedMCGr12;
	SCellToAddModListr10  sCellToAddModListMCGr12;
	MeasGapConfig    measGapConfigr12;
	PowerCoordinationInfor12  powerCoordinationInfor12;
	SCGConfigPartSCGr12    scgRadioConfigr12;
	OCTE  eutraCapabilityInfor12;
	SCGConfigRestrictInfor12  scgConfigRestrictInfor12;
	OCTE  mbmsInterestIndicationr12;
	MBMSInterestIndicationr11);
	MeasResultServCellListSCGr12 measResultServCellListSCGr12;
	DRBInfoListSCGr12   drbToAddModListSCGr12;
	DRBToReleaseList  drbToReleaseListSCGr12;
	SCellToAddModListSCGr12  sCellToAddModListSCGr12;
	SCellToReleaseListr10  sCellToReleaseListSCGr12;
	PMax       pMaxr12;
	SCGConfigInfov13x0IEs   nonCriticalExtension;
	};
	 ;
	struct     SCGConfigInfov13x0IEs    {
	SCellToAddModListExtr13  sCellToAddModListMCGExtr13       MeasResultSSTDr13    measResultSSTDr13;
	MeasResultServCellListSCGExtr13 measResultServCellListSCGExtr13;
	SCellToAddModListSCGExtr13  sCellToAddModListSCGExtr13;
	SCellToReleaseListExtr13 sCellToReleaseListSCGExtr13;
	 struct   }   nonCriticalExtension   {
	};
	 ;
	SEQU    DRBInfoListSCGr12;
	 ;
	struct       DRBInfoSCGr12    {
	 Cond DRBSetup       int    epsBearerIdentityr12;
	DRBIdentity     drbIdentityr12;
	 Cond DRBSetup     enum   split  scg}     drbTyper12   {
	

;
	};
	 ;
	SEQU SCellToAddModListSCGr12;
	 ;
	SEQU SCellToAddModListSCGExtr13;
	 ;
	struct       CellToAddModr12    {
	SCellIndexr10       sCellIndexr12;
	struct       cellIdentificationr12   {
	PhysCellId       physCellIdr12;
	ARFCNValueEUTRAr9     dlCarrierFreqr12;
	 Cond SCellAdd                  };
	struct       measResultCellToAddr12   {
	RSRPRange       rsrpResultr12;
	RSRQRange      rsrqResultr12;
	 Cond SCellAdd2                  };
	

;
	SCellIndexr13     sCellIndexr13;
	struct      measResultCellToAddv13xy    {
	RSSINRRanger13     rssinrResultr13;
	 Cond SCellAdd2                };
	 
;
	};
	 ;
	SEQU MeasResultServCellListSCGr12;
	 ;
	SEQU MeasResultServCellListSCGExtr13;
	 ;
	struct      MeasResultServCellSCGr12    {
	ServCellIndexr10       servCellIdr12;
	struct        measResultSCellr12   {
	RSRPRange      rsrpResultSCellr12;
	RSRQRange     rsrqResultSCellr12;
	} ;
	

;
	ServCellIndexFullr13      servCellIdr13;
	struct       measResultSCellv13xy    {
	RSSINRRanger13    rssinrResultSCellr13;
	               };
	 
;
	};
	 ;
	struct     SCGConfigRestrictInfor12    {
	int     maxSCHTBBitsDLr12;
	int     maxSCHTBBitsULr12;
	};
	 ;
// -- ASN1STOP
// 
// SCG-ConfigInfo field descriptions
// drb-ToAddModListSCG
// Includes DRBs the SeNB is requested to establish or modify (DRB type change).
// drb-ToReleaseListSCG
// Includes DRBs the SeNB is requested to release.
// maxSCH-TB-BitsXL
// Indicates the maximum DL-SCH/UL-SCH TB bits that may be scheduled in a TTI. Specified as a percentage of the value defined for the applicable UE category.
// measGapConfig
// Includes the current measurement gap configuration.
// measResultSSTD
// Includes measurement results of UE SSTD between the PCell and the PSCell.
// measResultServCellListSCG
// Includes measurement results of SCG (serving) cells.
// radioResourceConfigDedMCG
// Includes the current dedicated MCG radio resource configuration.
// sCellIndex
// If sCellIndex-r13 is present, sCellIndex-r12 shall be ignored.
// sCellToAddModListMCG
// Includes the current MCG SCell configuration.
// sCellToAddModListSCG
// Includes SCG cells the SeNB is requested to establish. Measurement results may be provided for these cells.
// sCellToReleaseListSCG
// Includes SCG cells the SeNB is requested to release.
// scg-RadioConfig
// Includes the current dedicated SCG configuration.
// scg-ConfigRestrictInfo
// Includes fields for which MeNB explictly indicates the restriction to be observed by SeNB.
// servCellId
// If servCellId-r13 is present, servCellId-r12 shall be ignored.
// p-Max
// Cell specific value i.e. as broadcast by PCell.
// 
// Conditional presence
// Explanation
// DRB-Setup
// The field is mandatory present in case DRB establishment is requested; otherwise the field is not present.
// SCellAdd
// The field is mandatory present in case SCG cell establishment is requested; otherwise the field is not present.
// SCellAdd2
// The field is optional present in case SCG cell establishment is requested; otherwise the field is not present.
// 
// -	UERadioAccessCapabilityInformation
// This message is used to transfer UE radio access capability information, covering both upload to and download from the EPC.
// Direction: eNB to/ from EPC
// UERadioAccessCapabilityInformation message
// -- ASN1START
	 ;
	UERadioAccessCapabilityInformation    struct     {
	 enum        criticalExtensions   {
	 enum           c1    {
	ueRadioAccessCapabilityInformationr8;
	UERadioAccessCapabilityInformationr8IEs;
	spare7 typedef  ;
	spare6 typedef   spare5 typedef   spare4 typedef  ;
	spare3 typedef   spare2 typedef   spare1 typedef;
	} ;
	 struct   }   criticalExtensionsFuture    {
	};
	};
	 ;
	UERadioAccessCapabilityInformationr8IEs    struct     {
	OCTE  ueRadioAccessCapabilityInfo;
	 struct   }    nonCriticalExtension   {
	};
	 ;
// -- ASN1STOP
// 
// UERadioAccessCapabilityInformation field descriptions
// ue-RadioAccessCapabilityInfo
// Including E-UTRA, GERAN, and CDMA2000-1xRTT Bandclass radio access capabilities (separated). UTRA radio access capabilities are not included.
// 
// -	UERadioPagingInformation
// This message is used to transfer radio paging information, covering both upload to and download from the EPC.
// Direction: eNB to/ from EPC
// UERadioPagingInformation message
// -- ASN1START
	 ;
	UERadioPagingInformation    struct     {
	 enum        criticalExtensions   {
	 enum           c1    {
	UERadioPagingInformationr12IEs    ueRadioPagingInformationr12;
	spare7 typedef  ;
	spare6 typedef   spare5 typedef   spare4 typedef  ;
	spare3 typedef   spare2 typedef   spare1 typedef;
	} ;
	 struct   }   criticalExtensionsFuture    {
	};
	};
	 ;
	UERadioPagingInformationr12IEs    struct     {
	OCTE    ueRadioPagingInfor12;
	UERadioPagingInformationv13xyIEs    nonCriticalExtension;
	};
	 ;
	UERadioPagingInformationv13xyIEs    struct     {
	SEQU  supportedBandListEUTRAForPagingr13;
	 struct   }     nonCriticalExtension   {
	 ;
	};
	 ;
// -- ASN1STOP
// 
// UERadioPagingInformation field descriptions
// ue-RadioPagingInfo
// The field is used to transfer radio paging information required for a category 0 UE. The eNB generates the ue-RadioPagingInfo and the contained ue-Category-v1250 is absent when the UE is not a category 0 UE.
// supportedBandListEUTRAForPaging
// Indicates the UE supported frequency bands which is derived by the eNB from UE-EUTRA-Capability.
// 
// 10.3	Inter-node RRC information element definitions
// -	AS-Config
// The AS-Config IE contains information about RRC configuration information in the source eNB which can be utilized by target eNB to determine the need to change the RRC configuration during the handover preparation phase. The information can also be used after the handover is successfully performed or during the RRC connection re-establishment.
// AS-Config information element
// -- ASN1START
	 ;
	struct       ASConfig    {
	MeasConfig      sourceMeasConfig;
	RadioResourceConfigDedicated    sourceRadioResourceConfig;
	SecurityAlgorithmConfig   sourceSecurityAlgorithmConfig;
	CRNTI      sourceUEIdentity;
	MasterInformationBlock   sourceMasterInformationBlock;
	Syst sourceSystemInformationBlockType1  ;
	

  nonCriticalExtension ABSENT})              {
	SystemInformationBlockType2  sourceSystemInformationBlockType2;
	AntennaInfoCommon      antennaInfoCommon;
	ARFCNValueEUTRA     sourceDlCarrierFreq;
	

;
	OCTE sourceSystemInformationBlockType1Ext  
;
	SystemInformationBlockType1v890IEs);
	OtherConfigr9    sourceOtherConfigr9;
	 sourceOtherConfigr9 should have been optional. A target eNB compliant with this transfer;
	 syntax should support receiving an ASConfig not including this extension addition group;
	 e.g. from a legacy source eNB;
	 
;
	SCellToAddModListr10   sourceSCellConfigListr10;
	 
;
	SCGConfigr12     sourceConfigSCGr12;
	 
;
	};
	 ;
	struct       ASConfigv9e0    {
	ARFCNValueEUTRAv9e0  sourceDlCarrierFreqv9e0;
	};
	 ;
	struct       ASConfigv10j0    {
	AntennaInfoDedicatedv10i0  antennaInfoDedicatedPCellv10i0;
	};
	 ;
	struct       ASConfigv1250    {
	WLANOffloadConfigr12  sourceWlanOffloadConfigr12;
	SLCommConfigr12    sourceSLCommConfigr12;
	SLDiscConfigr12    sourceSLDiscConfigr12;
	};
	 ;
// -- ASN1STOP
// NOTE:	The AS-Config re-uses information elements primarily created to cover the radio interface signalling requirements. Consequently, the information elements may include some parameters that are not relevant for the target eNB e.g. the SFN as included in the MasterInformationBlock.
// 
// AS-Config field descriptions
// antennaInfoCommon
// This field provides information about the number of antenna ports in the source PCell.
// sourceDL-CarrierFreq
// Provides the parameter Downlink EARFCN in the source PCell, see TS 36.101 [42]. If the source eNB provides AS-Config-v9e0, it sets sourceDl-CarrierFreq (i.e. without suffix) to maxEARFCN.
// sourceOtherConfig
// Provides other configuration in the source PCell.
// sourceMasterInformationBlock
// MasterInformationBlock transmitted in the source PCell.
// sourceMeasConfig
// Measurement configuration in the source cell. The measurement configuration for all measurements existing in the source eNB when handover is triggered shall be included. See 10.5.
// sourceSL-CommConfig
// This field covers the sidelink communication configuration.
// sourceSL-DiscConfig
// This field covers the sidelink discovery configuration.
// sourceRadioResourceConfig
// Radio configuration in the source PCell. The radio resource configuration for all radio bearers existing in the source PCell when handover is triggered shall be included. See 10.5.
// sourceSCellConfigList
// Radio resource configuration (common and dedicated) of the SCells configured in the source eNB.
// sourceSecurityAlgorithmConfig
// This field provides the AS integrity protection (SRBs) and AS ciphering (SRBs and DRBs) algorithm configuration used in the source PCell.
// sourceSystemInformationBlockType1
// SystemInformationBlockType1 transmitted in the source PCell.
// sourceSystemInformationBlockType2
// SystemInformationBlockType2 transmitted in the source PCell.
// 
// -	AS-Context
// The IE AS-Context is used to transfer local E-UTRAN context required by the target eNB.
// 
// AS-Context information element
// -- ASN1START
	 ;
	struct          ASContext    {
	 Cond HO    ReestablishmentInfo      reestablishmentInfo;
	};
	 ;
	struct        ASContextv1130    {
	OCTE      idcIndicationr11;
	 Cond HO2   InDeviceCoexIndicationr11);
	OCTE    mbmsInterestIndicationr11;
	 Cond HO2   MBMSInterestIndicationr11);
	OCTE     powerPrefIndicationr11;
	 Cond HO2   UEAssistanceInformationr11);
	

;
	OCTE    sidelinkUEInformationr12;
	 Cond HO2  SidelinkUEInformationr12);
	 
;
	};
	 ;
// -- ASN1STOP
// 
// AS-Context field descriptions
// idc-Indication
// Including information used for handling the IDC problems.
// reestablishmentInfo
// Including information needed for the RRC connection re-establishment.
// 
// Conditional presence
// Explanation
// HO
// The field is mandatory present in case of handover within E-UTRA; otherwise the field is not present.
// HO2
// The field is optional present in case of handover within E-UTRA; otherwise the field is not present.
// 
// -	ReestablishmentInfo
// The ReestablishmentInfo IE contains information needed for the RRC connection re-establishment.
// ReestablishmentInfo information element
// -- ASN1START
	 ;
	 struct       ReestablishmentInfo    {
	PhysCellId      sourcePhysCellId;
	ShortMACI     targetCellShortMACI;
	     AdditionalReestabInfoList   additionalReestabInfoList;
	

;
	};
	 ;
	SEQU  AdditionalReestabInfoList  ;
	 ;
	 struct   AdditionalReestabInfo    {
	CellIdentity       cellIdentity;
	KeyeNodeBStar      keyeNodeBStar;
	ShortMACI       shortMACI;
	};
	 ;
	BIT      KeyeNodeBStar;
	 ;
// -- ASN1STOP
// 
// ReestablishmentInfo field descriptions
// additionalReestabInfoList
// Contains a list of shortMAC-I and KeNB* for cells under control of the target eNB, required for potential re-establishment by the UE in these cells to succeed.
// Key-eNodeB-Star
// Parameter KeNB*: See TS 33.401 [32, 7.2.8.4]. If the cell identified by cellIdentity belongs to multiple frequency bands, the source eNB selects the DL-EARFCN for the KeNB* calculation using the same logic as UE uses when selecting the DL-EARFCN in IDLE as defined in section 6.2.2. This parameter is only used for X2 handover, and for S1 handover, it shall be ignored by target eNB.
// sourcePhyCellId
// The physical cell identity of the source PCell, used to determine the UE context in the target eNB at re-establishment.
// targetCellShortMAC-I
// The ShortMAC-I for the handover target PCell, in order for potential re-establishment to succeed.
// 
// -	RRM-Config
// The RRM-Config IE contains information about UE specific RRM information before the handover which can be utilized by target eNB.
// RRM-Config information element
// -- ASN1START
	 ;
	struct       RRMConfig    {
	enum       ueInactiveTime   {
	s1  s2  s3  s5  s7  s10  s15  s20 ;
	s25  s30  s40  s50  min1  min1s20c  min1s40 ;
	min2  min2s30  min3  min3s30  min4  min5  min6 ;
	min7  min8  min9  min10  min12  min14  min17  min20 ;
	min24  min28  min33  min38  min44  min50  hr1 ;
	hr1min30  hr2  hr2min30  hr3  hr3min30  hr4  hr5  hr6 ;
	hr8  hr10  hr13  hr16  hr20  day1  day1hr12  day2 ;
	day2hr12  day3  day4  day5  day7  day10  day14  day19 ;
	   day24  day30  dayMoreThan30};
	

;
	CandidateCellInfoListr10 candidateCellInfoListr10;
	 
;
	};
	 ;
	SEQU CandidateCellInfoListr10;
	 ;
	struct     CandidateCellInfor10    {
	 cellIdentification;
	PhysCellId      physCellIdr10;
	ARFCNValueEUTRA     dlCarrierFreqr10;
	 available measurement results;
	RSRPRange     rsrpResultr10;
	RSRQRange     rsrqResultr10;
	

;
	ARFCNValueEUTRAv9e0   dlCarrierFreqv1090;
	 
;
	RSRQRangev1250    rsrqResultv1250;
	 
;
	RSSINRRanger13    rssinrResultv13xy;
	 
;
	};
	 ;
// -- ASN1STOP
// 
// RRM-Config field descriptions
// candidateCellInfoList
// A list of the best cells on each frequency for which measurement information was available, in order of decreasing RSRP.
// dl-CarrierFreq
// The source includes dl-CarrierFreq-v1090 if and only if dl-CarrierFreq-r10 is set to maxEARFCN.
// ue-InactiveTime
// Duration while UE has not received or transmitted any user data. Thus the timer is still running in case e.g., UE measures the neighbour cells for the HO purpose. Value s1 corresponds to 1 second, s2 corresponds to 2 seconds and so on. Value min1 corresponds to 1 minute, value min1s20 corresponds to 1 minute and 20 seconds, value min1s40 corresponds to 1 minute and 40 seconds and so on. Value hr1 corresponds to 1 hour, hr1min30 corresponds to 1 hour and 30 minutes and so on.
// 
// 10.4	Inter-node RRC multiplicity and type constraint values
// -	Multiplicity and type constraints definitions
// -- ASN1START
	 ;
	 Maximum number of KeNB* and shortMACI forwarded  int GER   32    maxReestabInfo;
	 at handover for reestablishment preparation;
	 ;
// -- ASN1STOP
// 
// -	End of EUTRA-InterNodeDefinitions
// -- ASN1START
	 ;
	END ;
